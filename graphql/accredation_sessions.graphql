
type AccredationSession {
    "Unique primary key."
    id: ID!
    name: String
    heading: String
    featured: Int
    description: String
    starttime: DateTime
    endtime: DateTime
    break: Int
    order: Int
    session_location_id: Int
    status: Int
    acc_id: Int
    session_speaker: [AccredationSessionSpeaker] @morphMany (type: "paginator")

    # session_speaker: [AccredationSessionSpeaker] @morphMany
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
}

extend type Query {
    "Find a single user by an identifying attribute."
    accredation_session(
      "Search by primary key."
      id: ID @eq
    ): AccredationSession @find

    all_accredation_sessions: [AccredationSession!]! @all

    accredation_sessions(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["name"])
    ): [AccredationSession!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createAccredationSession(
        name: String
        heading: String
        featured: Int
        description: String
        starttime: DateTime
        endtime: DateTime
        break: Int
        order: Int
        session_location_id: Int
        status: Int
        acc_id: Int): AccredationSession! @create @guard  @inject(context:"user.id",name:"created_by")

    deleteAccredationSession(id: ID!): AccredationSession! @delete @guard @inject(context:"user.id",name:"deleted_by")

    updateAccredationSession(
        id: ID!
        name: String
        heading: String
        featured: Int
        description: String
        starttime: DateTime
        endtime: DateTime
        break: Int
        order: Int
        session_location_id: Int
        status: Int
        acc_id: Int): AccredationSession! @update @guard @inject(context:"user.id",name:"updated_by")
}
