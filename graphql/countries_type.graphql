
type CountriesType {
    id:ID!
    name:String
    status:Int
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    product_country_types: [ProductCountryType] @hasMany
    updated_at: DateTime
    deleted_at:DateTime
    countries(orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["name"])):[Country] @belongsToMany (type: "paginator")
    notIncluded: [Country] @method(name:"not_included_countries")
}

extend type Query {
    country_type(
      id: ID @eq
    ): CountriesType @find

    all_country_types: [CountriesType!]! @all

    country_types(
        orderBy: [OrderByClause!]! @orderBy,

        where:_@whereConditions(columns:["name"])
    ): [CountriesType!]! @paginate(defaultCount: 10)

    cme_products_prices:JSON @field(resolver:"App\\GraphQL\\Queries\\CountriesTypes\\CMEProductPrices")
}
extend type Mutation {
    createCountryType(name: String!,status: Int!): CountriesType! @create  @guard @inject(context:"user.id",name:"created_by")
    updateCountryType(id: ID!,name: String,status: Int): CountriesType! @update @guard @inject(context:"user.id",name:"updated_by")
    deleteCountryType(id: ID!): String @guard @inject(context:"user.id",name:"deleted_by") @field(resolver:"App\\GraphQL\\Mutations\\CountryTypes\\DeleteCountryType")
}
