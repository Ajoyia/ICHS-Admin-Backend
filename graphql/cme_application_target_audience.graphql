
"Account of a person who utilizes this application."
type CMEApplicationTargetAudience {
    "Unique primary key."
    id: ID!
    audience_type: Int
    cme_application_id: Int
    total_learners: String
    role_id: Int
    is_fee: Int
    fee: Float
    cme_target_audience:CmeTargetAudience @belongsTo
    cme_role:CMERole @belongsTo
    status: Int
    currency_id:Int
    specialty_other:String
    type_others: String
    speciality_ids: [String]
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
}

extend type Query {
    "Find a single user by an identifying attribute."
    cme_application_target_audience(
      "Search by primary key."
      id: ID @eq
    ): CMEApplicationTargetAudience @find

    all_cme_application_target_audiences: [CMEActivity!]! @all

     cme_application_target_audiences(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["first_name","last_name","mobile_no","email"])
    ): [CMEApplicationTargetAudience!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createCMEApplicationTargetAudience(
        audience_type: Int
        cme_application_id: Int
        total_learners: Int
        role_id: Int
        is_fee: Int
        fee: Float
        currency_id: Int
        specialty_other:String
        type_others: String
        status: Int): CMEApplicationTargetAudience! @create @guard  @inject(context:"user.id",name:"created_by")

    deleteCMEApplicationTargetAudience(id: ID!): CMEApplicationTargetAudience! @delete @guard @inject(context:"user.id",name:"deleted_by")

    updateCMEApplicationTargetAudience(
        id: ID!
        audience_type: Int
        cme_application_id: Int
        total_learners: Int
        role_id: Int
        is_fee: Int
        fee: Float
        currency_id:Int
        specialty_other:String
        type_others: String
        status: Int): CMEApplicationTargetAudience! @update @guard @inject(context:"user.id",name:"updated_by")

        createTargetSpeciality(target_audience_id: Int, speciality_id: [String]): String
        @field(resolver: "App\\GraphQL\\Mutations\\TargetSpecialty")
}