
type CMEActivityAdministratorSpecialty {
    "Unique primary key."
    id: ID!
    cme_application_id: Int
    model_type: String
    model_id: Int
    model: CMEActivity @morphTo
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
}

extend type Query {
    "Find a single user by an identifying attribute."
    cme_activity_administrators_specialty(
      "Search by primary key."
      id: ID @eq
    ): CMEActivityAdministratorSpecialty @find

    all_cme_activity_administrators_specialties: [CMEActivityAdministratorSpecialty!]! @all

    cme_activity_administrators_specialties(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["model_type"])
    ): [CMEActivityAdministratorSpecialty!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createCMEActivityAdministratorSpecialty(activity_types:[Int!],model_type: String,cme_application_id: Int): String @guard @field(resolver:"App\\GraphQL\\Mutations\\CMEApplications\\createCMEActivityAdministratorSpecialty")
   
    deleteCMEActivityAdministratorSpecialty(id: ID!): CMEActivityAdministratorSpecialty! @delete @guard @inject(context:"user.id",name:"deleted_by")

    updateCMEActivityAdministratorSpecialty(
        id: ID!
        cme_application_id: Int
        model_type: String
        model_id: Int
       ): CMEActivityAdministratorSpecialty! @update @guard @inject(context:"user.id",name:"updated_by")
}
