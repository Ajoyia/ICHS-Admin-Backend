type VolunteerType {
    id:ID!
    nmae:String
    status: Int
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
}

extend type Query {
    "Find a single user by an identifying attribute."
    VolunteerType(
      "Search by primary key."
      id: ID @eq
    ): VolunteerType @Find

    all_VolunteerTypes: [VolunteerType!]! @all

    VolunteerTypes(
        orderBy: [OrderByClause!]! @orderBy,

        where:_@whereConditions(columns:["name"])
    ): [VolunteerType!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createVolunteerType(
        name:String
        status: Int
    ): VolunteerType! @create  @guard @inject(context:"user.id",name:"created_by")
    updateVolunteerType(
        id: ID!
        nmae:String
        status: Int
    ): VolunteerType! @update @guard @inject(context:"user.id",name:"updated_by")
    deleteVolunteerType(id: ID!): VolunteerType! @guard @delete @inject(context:"user.id",name:"deleted_by")
}
