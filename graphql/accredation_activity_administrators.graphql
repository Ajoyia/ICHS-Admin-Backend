
"Account of a person who utilizes this application."
type AccredationActivityAdministrator {
    "Unique primary key."
    id: ID!
    experience:String
    designation:String
    other_specialty:String
    accredation_id: Int
    salutation_id: Int
    first_name: String
    last_name: String
    email: String
    organization: String
    mobile_no: String
    address: String
    is_policy_agreement_email_sent:Int
    policy_agreement_email_sent_date:DateTime
    is_policy_agreement_signed:Int
    policy_agreement_signed_date:DateTime
    city_id: Int
    state_id: Int
    country_id: Int
    speciality_ids:[String]
    accredation_role:AccredationRole @belongsTo
    role_id: Int
    status: Int
    role_other: String
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
}

extend type Query {
    "Find a single user by an identifying attribute."
    accredation_activity_administrator(
      "Search by primary key."
      id: ID @eq
    ): AccredationActivityAdministrator @find

    all_accredation_activity_administrators: [AccredationActivityAdministrator!]! @all

     accredation_activity_administrators(  orderBy: [OrderByClause!]! @orderBy ): [AccredationActivityAdministrator!]! @paginate(defaultCount: 10)
}
extend type Mutation {

    createAccredationActivityAdministratorSpeciality(activity_id: Int, speciality_id: [String!]!): String
        @field(resolver: "App\\GraphQL\\Mutations\\AccredationActivityAdministrator\\CreateSpecialty")

    createAccredationActivityAdministrator(
        other_specialty:String
        accredation_id: Int
        salutation_id: Int
        first_name: String
        last_name: String
        email: String
        organization: String
        mobile_no: String
        address: String
        is_policy_agreement_email_sent:Int
        policy_agreement_email_sent_date:DateTime
        is_policy_agreement_signed:Int
        policy_agreement_signed_date:DateTime
        city_id: Int
        state_id: Int
        country_id: Int
        role_id: Int
        status: Int
        experience:String
        designation:String
        role_other: String): AccredationActivityAdministrator! @create @guard  @inject(context:"user.id",name:"created_by")

    deleteAccredationActivityAdministrator(id: ID!): AccredationActivityAdministrator! @delete @guard @inject(context:"user.id",name:"deleted_by")

    updateAccredationActivityAdministratorSigned(
        id: ID!
        is_policy_agreement_signed:Int
        ): String 
        @field(
            resolver: "App\\GraphQL\\Mutations\\AccredationActivityAdministrator\\updateAccredationActivityAdministratorSigned"
        )

    updateAccredationActivityAdministrator(
        id: ID!
        other_specialty:String
        accredation_id: Int
        salutation_id: Int
        first_name: String
        last_name: String
        email: String
        organization: String
        mobile_no: String
        address: String
        is_policy_agreement_email_sent:Int
        policy_agreement_email_sent_date:DateTime
        is_policy_agreement_signed:Int
        policy_agreement_signed_date:DateTime
        city_id: Int
        state_id: Int
        country_id: Int
        role_id: Int
        status: Int
        experience:String
        designation:String
        role_other: String): AccredationActivityAdministrator! @update @guard @inject(context:"user.id",name:"updated_by")
}