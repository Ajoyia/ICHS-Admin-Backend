
type AccredationCompletionForm {
    "Unique primary key."
    id: ID!
    acc_id: Int
    credit_hour:Int
    cme_validation: String
    pdf_path:String
    commercial_independence: String
    evaluation_summary: String
    commercial_support: String
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
}

extend type Query {
    "Find a single user by an identifying attribute."
    accredation_completed_forms(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["id","updated_at"])
    ): [AccredationApplication!]! @paginate(builder: "App\\GraphQL\\Queries\\AccredationCompletionForm\\GetCompletionAccredationApplication")
    accredation_completion_form(
      "Search by primary key."
      id: ID @eq
    ): AccredationCompletionForm @find

    

    all_accredation_completion_forms: [AccredationCompletionForm!]! @all

    accredation_completion_forms(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["activity_title"])
    ): [AccredationCompletionForm!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createAccredationCompletionForm(
        acc_id: Int
        credit_hour:Int
        cme_validation: String
        commercial_independence: String
        evaluation_summary: String
        commercial_support: String
        xls_file: Upload): String @guard @field(resolver:"App\\GraphQL\\Mutations\\AccredationCompletionForm\\createAccredationCompletionForm") @inject(context:"user.id",name:"created_by")  @inject(context:"user.id",name:"updated_by")
   
    deleteAccredationCompletionForm(id: ID!): AccredationCompletionForm! @delete @guard @inject(context:"user.id",name:"deleted_by")

    updateAccredationCompletionForm(
        id: ID!
        acc_id: Int
        cme_validation: String
        commercial_independence: String
        evaluation_summary: String
        commercial_support: String
       ): AccredationCompletionForm! @update @guard @inject(context:"user.id",name:"updated_by")
}
