
"Account of a person who utilizes this application."
type MedicalHealthProfessional {
    "Unique primary key."
    id: ID!
    name: String
    parent_id: Int
    medical_health_professional: MedicalHealthProfessional @belongsTo
    medical_health_professionals: [MedicalHealthProfessional] @hasMany
}

extend type Query {
    "Find a single user by an identifying attribute."
    medical_health_professional(
      "Search by primary key."
      id: ID @eq
    ): MedicalHealthProfessional @find

    all_medical_health_professionals: [MedicalHealthProfessional!]! @all

    all_parent_medical_health_professionals:[MedicalHealthProfessional!]!
        @field(
            resolver: "App\\GraphQL\\Queries\\MedicalHealthProfessionals\\GetParents"
        )
    medical_health_professionals(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["name"])
    ): [MedicalHealthProfessional!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createMedicalHealthProfessional(name:  String!,parent_id: Int): MedicalHealthProfessional! @create @guard @inject(context:"user.id",name:"created_by")
    deleteMedicalHealthProfessional(id: ID!): MedicalHealthProfessional! @delete @guard @inject(context:"user.id",name:"deleted_by")
    updateMedicalHealthProfessional(id: ID!,name:String,parent_id: Int): MedicalHealthProfessional! @update @guard @inject(context:"user.id",name:"updated_by")
}
