
"Account of a person who utilizes this application."
type State {
    id:ID!
    name:String!
    country_id:Int
    status:Int
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime
    updated_at: DateTime
    deleted_at:DateTime
    country: Country @belongsTo
    cities(orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["name"])):[City] @hasMany (type: "paginator")
    state_cities: [City] @hasMany    
}

extend type Query {
    "Find a single user by an identifying attribute."
    state(
      "Search by primary key."
      id: ID @eq
    ): State @find

    all_states: [State!]! @all

    states(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["name"])
    ): [State!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createState(name: String!,status: Int!,country_id: Int): State! @create  @guard @inject(context:"user.id",name:"created_by")  
    updateState(id: ID!,name: String,status: Int!,country_id: Int): State! @update @guard @inject(context:"user.id",name:"updated_by")
    deleteState(id: ID!): State! @guard @delete @inject(context:"user.id",name:"deleted_by")
}