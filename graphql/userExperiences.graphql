type UserExperience{
    id:ID!
    user:User @belongsTo
    jobTitle:JobsTitle @belongsTo
    company_name:String
    jobs_responsibility:String
    start_date:Date
    end_date:Date
    createdBy:User @belongsTo
    updatedBy:User @belongsTo
    deletedBy:User @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Query{
    userExperience(
        id:ID!  @eq
    ): UserExperience @find @guard
    userExperiences:[UserExperience] @all
    createUserExperience(
        user_id:Int
        job_title:String
        company_name:String
        jobs_responsibility:String
        start_date:Date
        end_date:Date
    ): UserExperience @create @guard @inject(context:"user.id",name:"created_by")
    deleteUserExperience(id:ID!): UserExperience @delete @guard @inject(context: "user.id", name: "deleted_by")
    updateUserExperience(
        id:ID!
        user_id:Int
        job_title:String
        company_name:String
        jobs_responsibility:String
    ): UserExperience @update @guard @inject(context: "user.id", name: "updated_by")
}
