
"Account of a person who utilizes this application."
type HtmlTemplate {
    "Unique primary key."
    id: ID!
    name: String
    content: String
    status: Int
    image: String
}

extend type Query {
    "Find a single user by an identifying attribute."
    html_template(
      "Search by primary key."
      id: ID @eq
    ): HtmlTemplate @find

    "List multiple users."
    all_html_templates(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [HtmlTemplate!]! @all

    
     html_templates(
        orderBy: [OrderByClause!]! @orderBy,
        where:_@whereConditions(columns:["name","image"])
    ): [HtmlTemplate!]! @paginate(defaultCount: 10)
}
extend type Mutation {
    createHtmlTemplate(
                        name:  String!
                        content: String!
                        image: Upload
                    ): String @guard @field(resolver:"App\\GraphQL\\Mutations\\HtmlTemplates\\CreateHtmlTemplate")
                 
    deleteHtmlTemplate(id: ID!): String  @guard @field(resolver:"App\\GraphQL\\Mutations\\HtmlTemplates\\DeleteHtmlTemplate")
    updateHtmlTemplate(id: ID!,name:String,content: String, image: Upload): String @guard @field(resolver:"App\\GraphQL\\Mutations\\HtmlTemplates\\UpdateHtmlTemplate")
}